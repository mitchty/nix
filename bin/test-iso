#!/usr/bin/env nix-shell
#-*-mode: Shell-script; coding: utf-8;-*-
#!nix-shell -i bash -p bash
# SPDX-License-Identifier: BlueOak-1.0.0
# Description: Want to test out the autoinstall iso setup.
_base=$(basename "$0")
_dir=$(cd -P -- "$(dirname -- "$(command -v -- "$0")")" && pwd -P || exit 126)
export _base _dir

set -xeu

# Note: nix-shell for now whilst I work out kinks manually.

# Note this is just a custom wrapper script that auto uses the OVMF firmware. I
# need to validate/test using efi vars to do more automation but for now this is
# fine.
QEMU=${QEMU:-qemu-system-x86_64-uefi}
QEMUIMG=${QEMUIMG:-qemu-img}
NIXOPTS=${NIXOPTS:---show-trace}

qemuargs="-enable-kvm -smp 4 -nographic -m 8096 -boot d"

# So as not to conflict port wise pick a stable off input string ssh port
ssh_port() {
  input=${1?ssh_port requires a string to use as input}
  port=$((($(echo ${input} | sha1sum | tr -d '[0a-z \-]' | head -c 15)) % 100 * 100 + 10022))
  #  stableport=$((($(echo ${input} | sha1sum | awk '{print $1}' | tr -d '[a-z]' | head -c 19)) % 100 * 100 + 10022))
  echo ${port}
}

get_iso() {
  readlink -f $(find -L ${_dir}/../result -name "*.iso" -type f | head -n1)
}

test_rescue() {
  # Single simple one disk straight up fs setup.
  typ=rescue
  fulltype="${typ}Iso"
  nix build ${NIXOPTS-} ".#${fulltype}"
  iso=$(get_iso)
  tmpdir=$(mktemp -d XXXXXXXX -t)
  trap "rm -fr $tmpdir" EXIT TERM INT QUIT

  disk0="${tmpdir}/vdisk0"
  ${QEMUIMG} create -f qcow2 ${disk0} 40G

  sshport="$(ssh_port ${fulltype})"

  ${QEMU} ${qemuargs} -cdrom ${iso} -hda ${disk0} -net user,hostfwd=tcp::${sshport}-:22 -net nic
  # ${QEMU} -enable-kvm -smp 4 -nographic -m 8096 -boot d -cdrom $(find -L ${_dir}/.. -name custom.iso) -hda ${disk0} -net user,hostfwd=tcp::10022-:22 -net nic
}

test_simplevm() {
  # Single simple one disk straight up fs setup.
  typ=rescue
  fulltype="${typ}Iso"
  nix build ${NIXOPTS-} ".#${fulltype}"
  iso=$(get_iso)
  tmpdir=$(mktemp -d XXXXXXXX -t)
  trap "rm -fr $tmpdir" EXIT TERM INT QUIT

  disk0="${tmpdir}/vdisk0"
  ${QEMUIMG} create -f qcow2 ${disk0} 40G

  sshport="$(ssh_port ${fulltype})"

  ${QEMU} ${qemuargs} -cdrom ${iso} -hda ${disk0} -net user,hostfwd=tcp::${sshport}-:22 -net nic
  # ${QEMU} -enable-kvm -smp 4 -nographic -m 8096 -boot d -cdrom $(find -L ${_dir}/.. -name custom.iso) -hda ${disk0} -net user,hostfwd=tcp::10022-:22 -net nic
}

# Test out single, zfs, and lvm autoinstalls, the end result is these vm's
# shouldn't stay running forever
#
# I need to come up with some way to get this into nix flake checks that makes
# sense.

test_simple() {
  # Single simple one disk straight up fs setup.
  typ=simplevm
  nix build ${NIXOPTS-} ".#${typ}Iso"
  iso=$(get_iso)
  tmpdir=$(mktemp -d XXXXXXXX -t)
  trap "rm -fr $tmpdir" EXIT TERM INT QUIT

  disk0="${tmpdir}/vdisk0"
  ${QEMUIMG} create -f qcow2 ${disk0} 40G

  sshport="$(ssh_port ${typ})"

  ${QEMU} ${qemuargs} -cdrom ${iso} -hda ${disk0} -net user,hostfwd=tcp::${sshport}-:22 -net nic
  # ${QEMU} -enable-kvm -smp 4 -nographic -m 8096 -boot d -cdrom $(find -L ${_dir}/.. -name custom.iso) -hda ${disk0} -net user,hostfwd=tcp::10022-:22 -net nic
}

test_iso() {
  typ=isoTest
  nix build ${NIXOPTS-} ".#isoWm2"
  tmpdir=$(mktemp -d XXXXXXXX -t)
  trap "rm -fr $tmpdir" EXIT TERM INT QUIT

  disk0="${tmpdir}/vdisk0"
  ${QEMUIMG} create -f qcow2 ${disk0} 40G

  sshport="$(ssh_port ${typ})"

  ${QEMU} -enable-kvm -smp 4 -nographic -m 8096 -boot d -cdrom $(find -L ${_dir}/../result -name "*.iso" | head -n1) -hda ${disk0} -net user,hostfwd=tcp::${sshport}-:22 -net nic
}

test_zfs() {
  typ=isoZfsTest
  nix build ${NIXOPTS-} ".#${typ}"
  iso=$(get_iso)
  tmpdir=$(mktemp -d XXXXXXXX -t)
  trap "rm -fr $tmpdir" EXIT TERM INT QUIT

  disk0="${tmpdir}/vdisk0"
  ${QEMUIMG} create -f qcow2 ${disk0} 40G
  disk1="${tmpdir}/vdisk1"
  ${QEMUIMG} create -f qcow2 ${disk1} 40G

  sshport="$(ssh_port ${typ})"

  ${QEMU} ${qemuargs} -cdrom ${iso} -hda ${disk0} -hdb ${disk1} -net user,hostfwd=tcp::${sshport}-:22 -net nic
  # ${QEMU} -bios ${efibios}/FV/OVMF.fd -enable-kvm -smp 4 -nographic -m 8096 -boot d -cdrom $(find -L ${_dir}/.. -name custom.iso) -hda ${disk0} -hdb ${disk1} -net user,hostfwd=tcp::10022-:22 -net nic
  # ${QEMU} -enable-kvm -smp 4 -nographic -m 8096 -boot d -hda ${disk0} -hdb ${disk1} -net user,hostfwd=tcp::10022-:22 -net nic
}

validtests="rescue simple"
tests=${validtests}

if [ $# -gt 0 ]; then
  tests="$@"
fi

for t in ${tests}; do
  if echo ${validtests} | grep -q -- $t; then
    test_${t}
  fi
done
